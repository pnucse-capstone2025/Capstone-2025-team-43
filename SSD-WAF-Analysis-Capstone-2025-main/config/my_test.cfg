#
# Copyright (C) 2017 CAMELab
#
# 이 파일은 SimpleSSD의 일부입니다.
#
# SimpleSSD는 자유 소프트웨어입니다: 자유 소프트웨어 재단이 공표한 GNU 일반 공중 사용 허가서(버전 3 또는 그 이후 버전)의 조건에 따라 재배포 및/또는 수정할 수 있습니다.
#
# SimpleSSD는 유용하게 사용될 수 있으리라 기대되지만,
# 어떠한 형태의 보증도 제공하지 않습니다. 상품성 또는 특정 목적에의 적합성에 대한 묵시적 보증도 없습니다.
# 자세한 내용은 GNU 일반 공중 사용 허가서를 참고하십시오.
#
# SimpleSSD와 함께 GNU 일반 공중 사용 허가서를 받으셨을 것입니다.
# 못 받으셨다면 <http://www.gnu.org/licenses/>를 참고하십시오.
#

#
# SimpleSSD-Standalone 샘플 설정 파일
#
# 섹션:
# global:    전역 옵션
# generator: 요청 생성기 설정
# trace:     트레이스 재생기 설정
#

# 전역 설정
[global]

## 모드 선택
# 가능한 값:
#  0: 요청 생성기 모드 ([trace]의 모든 설정은 무시됨)(IO 자동 생성)
#  1: 트레이스 재생기 모드 ([generator]의 모든 설정은 무시됨)(trace파일을 읽어야함 )
Mode = 1

## 통계 로그 주기
# 주기적으로 통계 로그를 출력합니다
# 0이면 로그를 출력하지 않음
# 단위: ms (밀리초, 시뮬레이션 시간 기준, 실제 시간이 아님)
LogPeriod = 0

## 로그 파일
# 통계 로그와 디버그 로그의 출력 경로를 설정합니다
# <빈 값>이면 로그를 출력하지 않음
# 가능한 키워드:
#  STDOUT: 표준 출력
#  STDERR: 표준 에러
LogFile = STDOUT
DebugLogFile = 

## I/O 로그 파일
# 지연 시간 로그의 출력 경로를 설정합니다
# <빈 값>이면 로그를 출력하지 않음
LatencyLogFile =

## 진행 상황 출력
# 두 로그 모두 파일로 출력될 경우(화면이 아님)
# 이벤트 엔진 속도와 시뮬레이션 진행 상황이 STDOUT에 표시됩니다
# 이 옵션은 진행 상황 출력 주기를 설정합니다
# 0이면 로그를 출력하지 않음
# 단위: s (초, 호스트 시간 기준, 실제 시간)
ProgressPeriod = 0

## 인터페이스
# 사용할 호스트 인터페이스를 설정합니다
# 가능한 값:
#  0: 인터페이스 없음 - 요청을 HIL 계층에 직접 전달
#  1: NVMe - Non-Volatile Memory Express 사용
#  2: SATA - Serial AT Attachment 사용
#  3: UFS - Universal Flash Storage 사용
Interface = 0

## 스케줄러
# Block I/O 계층에서 사용할 스케줄러를 설정합니다
# 가능한 값:
#  0: Noop - 스케줄링 없음
Scheduler = 0

## 시스템 지연 시간
# 실제 OS의 I/O 스택을 모방하여 소프트웨어 실행 지연 시간을 추가합니다
SubmissionLatency = 0us
CompletionLatency = 0us

# 요청 생성기 설정
[generator]

## 이 요청 생성기는 Flexible I/O tester와 유사하게 동작합니다
# 타입 정의:
#  str:   문자열, 영숫자 문자들의 시퀀스
#  int:   SI 정수, 숫자 문자들의 시퀀스
#         가능한 접미사(대소문자 구분):
#          10^3 단위: k, m, g, t
#          2^10 단위: K, M, G, T
#  float: 부동 소수점 숫자, 소수점이 하나(또는 없음) 포함된 숫자 시퀀스
#  bool:  불리언, 참 또는 거짓 값
#         가능한 값(대소문자 구분 없음):
#          참: 0이 아닌 숫자, T, True, Y, Yes
#          거짓: 그 외
#  time:  SI 정수, 숫자 문자들의 시퀀스
#         접미사가 없으면 값은 피코초로 처리됨
#         가능한 접미사(대소문자 구분):
#          s, ms, us, ns, ps

## 전체 I/O 크기 = int
# time_based = false일 때만 유효
io_size = 16M   # 16 * 2^20 바이트

## I/O 타입 = str
# 가능한 값:
#  read:      순차 읽기
#  write:     순차 쓰기
#  randread:  랜덤 읽기
#  randwrite: 랜덤 쓰기
#  readwrite: 혼합 순차 I/O
#  randrw:    혼합 랜덤 I/O
readwrite = read

## 혼합 I/O 비율 = float
# readwrite가 readwrite 또는 randrw가 아니면 이 값은 무시됨
# 0 <= 값 <= 1
rwmixread = 0.5  # 읽기 I/O의 50%

## 블록 크기 = int
blocksize = 4K

## 블록 정렬 = int
# 기본 <빈 값>은 blocksize
blockalign =

## I/O 모드 = str
# 가능한 값:
#  sync:  동기식 I/O
#  async: 비동기식 I/O
iomode = async

## I/O 깊이 = int
# <iomode> = sync일 때 iodepth = 1
iodepth = 32

## 오프셋 = int
offset = 0

## 크기 = int
# 기본 <빈 값>은 [SSD 크기] - <offset>
size =

## Thinktime = time
thinktime = 0

## 랜덤 시드 = int
randseed = 13245

## 시간 기반 = bool
time_based = 0

## 실행 시간 = time
# time_based = true일 때만 유효
runtime = 10s

# 트레이스 재생기 설정
[trace]

## 트레이스 파일  
File = ./traces/sa00_50M_no_hotness.csv

## 타이밍 옵션
# 가능한 값:
#  0: 타이밍 제약 없음(동기식)
#     I/O가 BreakSyncIO 대기 시간과 함께 동기식으로 발행됨
#  1: 타이밍 제약 없음(비동기식)
#     I/O가 BreakAsyncIO 대기 시간과 함께 비동기식으로 발행됨
#  2: 엄격한 타이밍
#     I/O가 트레이스의 정확한 시간에 비동기식으로 발행됨
TimingMode = 1

## 큐 깊이
# TimingMode = 1일 때 최대 비동기 I/O 깊이
QueueDepth = 64

## I/O 개수 제한
# 0으로 설정하거나 비워두면 트레이스 파일의 모든 I/O를 발행
IOLimit = 0

## 트레이스 파일 정규표현식
# C++11 정규표현식 라이브러리 참고
# 항상 ECMAScript 정규표현식 문법 사용
# 매칭되지 않은 라인은 무시됨
#  이 예시는 blkparse 결과용
Regex = "\d+,\d+ +\d+ +\d+ +(\d+).(\d+) +\d+ +D +(\w+) +(\d+) \+ (\d+)"

## 트레이스 파일 정규표현식 그룹 ID
# 파싱된 트레이스 파일의 필드와 그룹 ID 매핑
# <Field> = <Group ID>
# 필드는 비워둘 수 있음
# 모든 시간 필드는 합산됨
# 그룹 ID 0은 매칭된 문자열(사용하지 말 것)
# 모든 필드(연산 제외)는 정수여야 함(부동 소수점 불가)
# 연산(Operation)의 경우 문자열의 첫 글자만 사용
# R: 읽기, W: 쓰기, F: 플러시, T/D: 트림
# 대소문자 구분 없음
#  예: RA (blkparse의 Read, Read-ahead)
#   읽기 연산(R)으로 처리
#  예: trim (fio iolog 버전 2의 Trim)
#   트림 연산(T)으로 처리
#  예: D (blkparse의 Trim - Discard)
#   트림 연산(D)으로 처리
#  예: FWFS (blkparse의 Flush, Write, FUA, SYNC)
#   플러시 연산(F)으로 처리
Operation = 3
ByteOffset =
ByteLength =
LBAOffset = 4
LBALength = 5
Second = 1
Millisecond =
Microsecond =
Nanosecond = 2
Picosecond =

## LBA 크기
# LBA offset/length를 사용할 경우 LBA 크기 설정
LBASize = 512

## 필드(시간 제외)를 16진수로 처리
# 정규표현식이 16진수 숫자를 캡처하는지 반드시 확인
UseHexadecimal = 0
